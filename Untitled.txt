def get_number_of_walks():
    """
    Get number of walks input from the user
    """
    while True:
        print('Please enter number of walks for each dog')
        print('Data should be separated by commas')
        print('Each number represents total walks for one dog in a day')
        print('Enter walks in following order: Lou, Bently, Spookie, Baltzar')
        print('Example: 1, 2, 3, 4\n')

        data_str = input('Enter number of walks here: ')
        
        #This splits the data by the (,) to make it into a list.*****
        #The list will be added to the worksheet.****
        walks_data = data_str.split(',')
        
        if validate_data(walks_data):
            print('Data is valid!')
            break

    return walks_data


def validate_data(values):
    """
    Validates the numbers inserted by user
    """
    print(values)

    try:
        [int(value) for value in values]
        if len(values) != 4:
            raise ValueError(
            f'Please enter 4 values, you provided{len(values)}'
            )
    except ValueError as e:
        print(f'Invalid data: {e}, please try again.\n')
        return False

    return True



               
    try:
        
        print('Wich dog would you like to calculate price for?')
        dog_name = (input('Enter name of dog:'))
        str(dog_name)

    except ValueError as e:
        print(f'Error: {e}')
        print('Name is not in the register.')
        print('Please try again.')

    while True:
        print('Please enter name of dog.')
        
        if dog_name not in valid_dog_names:
            print('Name is invalid')
            print(f'No dog named {dog_name}.')
            return True

        else:
            print('Name is valid!')
            return False
            break



Traceback (most recent call last):
  File "run.py", line 220, in <module>
    get_price()
  File "run.py", line 125, in get_price
    column_data = [int(value) for value in column_data]
  File "run.py", line 125, in <listcomp>
    column_data = [int(value) for value in column_data]
ValueError: invalid literal for int() with base 10: 'Lou